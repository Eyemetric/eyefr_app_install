app_ver: "1.6.3"
app_name: "eyefr"
#base_dir: "/opt/eyemetric_{{app_ver}}"
eyemetric_user: "eyemetric"
eyemetric_group: "eyemetric"

quadlet_dir: "/home/{{eyemetric_user}}/.config/containers/systemd"
app_dir: "/home/{{ eyemetric_user }}/fr/{{ app_ver }}" # %h is systemd expansion for home dir.
#app_dir: "/opt/eyemetric/fr"
#app_dir: "{{ base_dir }}/fr"

#credentials required to pull our images
docker_login: "eyemetricfr"
docker_pwd: "19darkangel84"
docker_registry: "docker.io"

# vars file for paravision hub
pv_login: "eyemetric_eyemetricfr"
pv_pwd: "R2y1a1n@"
pv_registry: "containers.paravision.ai"

host_ip: "{{ansible_default_ipv4.address}}"

fr_network: "fr_network_{{ app_ver }}"
tz: "EST"
#port numbers

facade_port: "80"
facade_ssl_port: "443"
fr_api_port: "3000"
pv_stream_port: "5000"
pv_detect_port: "5050"
pv_alerts_port: "5051"
# can these be the same or is this an error?
pv_detect_ws_port: "5050"
pv_alerts_ws_port: "5051"
pv_db_port: "5432"
frdb_port: "5433"

pv_ident_port: "8080"
pv_proc_port: "8081"
webrtc_port: "8083"
cam_srv_port: "9000"
auth_port: "42069"

fr_backend: "pv"
frdb_user: "admin"
frdb_pwd: "admin"
frdb_name: "safr"
tpass_user: "admin"
tpass_pwd: "njbs1968"
tpass_addr: "https://devsys01.tpassvms.com/TpassPVService/"
cv_url: "http://onprem-search-engine:7000"
fr_api_min_match: "0.5"
fr_api_match_expires: "10"
fr_api_min_quality: "0.8"
fr_api_min_dupe_match: "0.90"
fr_api_log_level: "info"
# Add more pro#jects as needed

#facade host volumes
caddy_file: "{{ app_dir }}/config/Caddyfile"
caddy_certs: "{{ app_dir }}/certs"
caddy_cam_app: "{{ app_dir }}/sites/cam-app"
caddy_fr_analyze_app: "{{ app_dir }}/sites/fr-analyze"
# host volumes
# rtsp_webrtc host volumes
webrtc_vol: "{{ app_dir }}/config/rtsp-webrtc.json:/config/config.json"
# auth_volume
auth_vol: "{{ app_dir }}/sites/assets:/root/assets"
pvdb_db_data_vol: "{{ app_dir }}/data/pvdb_pgdata/_data:/var/lib/postgresql/data:Z"
frdb_data_vol: "{{ app_dir }}/data/safr_pgdata/_data:/var/lib/postgresql/data"
#workaround patched pv code for multi gpu access.
pvstrm_vol: "{{ app_dir }}/sites/pv_app"
proc_vol: "{{ app_dir }}/sites/proc_app"
#cam server vars
cam_srv_min_match: "0.50"
cam_srv_match_expires: "10"
cam_srv_min_quality: "0.8"
cam_srv_min_dupe_match: "0.98"
cam_srv_log_detections: "false"
cam_srv_retain_detection_images: "false"
fr_api_url: "http://{{host_ip}}:{{ fr_api_port }}"

#pv vars

pv_detect_addr: "{{host_ip}}:{{ pv_detect_port }}"
pv_alerts_addr: "{{host_ip}}:{{ pv_alerts_port }}"
pv_ident_url: "http://{{host_ip}}:{{ pv_ident_port }}/v4"
pv_proc_url: "http://{{host_ip}}:{{ pv_proc_port }}/v6"
pv_stream_url: "http://{{host_ip}}:{{pv_stream_port }}"
pv_detection_ws: "ws://{{host_ip}}:{{ pv_detect_ws_port }}"
pv_alerts_ws: "ws://{{host_ip}}:{{ pv_alerts_ws_port }}"
processor_pv_http_interface: "on"
processor_pv_inference_workers: "1"

pvdb_db_user: "admin"
pvdb_db_pwd: "admin"
pvdb_db_name: "identity"

ident_postgres_uri: "postgresql://{{ pvdb_db_user }}:{{ pvdb_db_pwd }}@{{host_ip}}:{{ pv_db_port }}/{{ pvdb_db_name }}?sslmode=disable"
ident_http_proxy: "on"

#stream
stream_tz: "EST"
stream_pv_output_faces_only: "true"
stream_pv_postprocessor_workers: "1"
stream_pv_inference_workers: "1"
stream_pv_face_quality_tracking: "0.5"

rtsp_api_url: "http://demo:demo@{{host_ip}}:{{ webrtc_port }}"
rtsp_cam_proxy_url: "http://{{host_ip}}:{{ webrtc_port }}"

# images.
rtsp_webrtc_image: "docker.io/eyemetricfr/rtsp-webrtc:{{app_ver}}"

pv_gpu_images:
  pvdb: "{{pv_registry}}/postgres/postgres:12.0"
  processor: "{{pv_registry}}/processor/processor:v6.0.0-gen5-balanced-tensorrt"
  identity: "docker.io/eyemetricfr/identity:v4.0.0"
  streaming: "{{pv_registry}}/streaming/streaming:v6.0.0-tensorrt"

pv_cpu_images:
  pvdb: "{{pv_registry}}/postgres/postgres:12.0"
  processor: "{{pv_registry}}/processor/processor:v6.0.0-gen5-balanced-openvino"
  identity: "docker.io/eyemetricfr/identity:v4.0.0"
  streaming: "{{pv_registry}}/streaming/streaming:v6.0.0-openvino"

safr_images:
  fr_api: "docker.io/eyemetricfr/fr-api:{{ app_ver }}"
  frdb: "docker.io/postgres:14.1"
  identity: "docker.io/eyemetricfr/identity:v4.0.0"
  cam_server: "docker.io/eyemetricfr/cam-server:{{ app_ver }}"
  rtsp_webrtc: "docker.io/eyemetricfr/rtsp-webrtc:{{ app_ver }}"
  facade: "docker.io/eyemetricfr/facade:{{ app_ver }}"
  assets: "docker.io/eyemetricfr/assets:{{ app_ver }}"
  auth: "docker.io/eyemetricfr/auth:{{ app_ver }}"

#do we need these?
#container names
frdb: "frdb_{{app_ver}}"
fr_api: "fr-api_{{app_ver}}"
cam_server: "cam-server_{{app_ver}}"
facade: "facade_{{app_ver}}"
rtsp_webrtc: "rtsp-webrtc_{{ app_ver }}"
auth: "auth_{{ app_ver }}"

#gpu container names
pvdb_gpu: "pvdb_gpu_{{ app_ver }}"
ident_gpu: "ident_gpu_{{ app_ver }}"
proc_gpu: "proc_gpu_{{ app_ver }}"
pvstrm_gpu: "pvstream_gpu_{{ app_ver }}"

#cpu container names
pvdb_cpu: "pvdb_cpu_{{ app_ver }}"
ident_cpu: "ident_cpu_{{ app_ver }}"
proc_cpu: "proc_cpu_{{ app_ver }}"
pvstrm_cpu: "pvstream_cpu_{{ app_ver }}"
